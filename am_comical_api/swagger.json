{
  "swagger" : "2.0",
  "info" : {
    "description" : "An API for keeping track of your contacts and the companies they work for. \n\nDon't forget to take it for a spin by clicking on the **Try in Client** button next to each operation! All read operations are public and don't require authentication.\n\n<div>\n<img src='https://thecontactsapi.apispark.net/v1/img/cropped-contact-img.png' width='90%'>\n<div>\n\n<!-- ![](https://thecontactsapi.apispark.net/v1/img/cropped-contact-img.png) -->\n\n",
    "version" : "1.2.0",
    "title" : "Contacts API",
    "termsOfService" : "",
    "contact" : { }
  },
  "host" : "localhost",
  "schemes" : [ "http" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/am_comical/index.php/Home/AmFeeds/getFreshDesDatas" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "Get the list of Contacts",
        "description" : "Loads a list of Contact",
        "parameters" : [ {
          "name" : "$size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Size of the page to retrieve.",
          "x-example" : 10
        }, {
          "name" : "$page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Number of the page to retrieve.",
          "x-example" : 1
        }, {
          "name" : "$sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Order in which to retrieve the results. Multiple sort criteria can be passed.",
          "x-example" : "birthday DESC"
        }, {
          "name" : "firstName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collections of result by the value of field firstName",
          "x-example" : "John"
        }, {
          "name" : "lastName",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collections of result by the value of field lastName",
          "x-example" : "Doe"
        }, {
          "name" : "active",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Allows to filter the collections of result by the value of field active",
          "x-example" : true
        }, {
          "name" : "company",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collections of result by the value of field company",
          "x-example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Contact"
              }
            },
            "examples" : {
              "application/json" : "[{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}]"
            },
            "headers" : {
              "X-Page-Count" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Page-Number" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Page-Size" : {
                "type" : "integer",
                "x-example" : 25
              },
              "X-Total-Count" : {
                "type" : "integer",
                "x-example" : 2
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Create a Contact",
        "description" : "Adds a Contact",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          },
          "x-examples" : {
            "application/json" : "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Contact"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      }
    },
    "/companies/" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Load the list of Companies",
        "description" : "Loads a list of Company",
        "parameters" : [ {
          "name" : "$size",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Size of the page to retrieve.",
          "x-example" : 10
        }, {
          "name" : "$page",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "description" : "Number of the page to retrieve.",
          "x-example" : 1.0
        }, {
          "name" : "$sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Order in which to retrieve the results. Multiple sort criteria can be passed. Example: sort=age ASC,height DESC",
          "x-example" : "name ASC"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Allows to filter the collections of result by the value of field name",
          "x-example" : "George Street Brewery"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Company"
              }
            },
            "examples" : {
              "application/json" : "[{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}]"
            },
            "headers" : {
              "X-Page-Count" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Page-Number" : {
                "type" : "integer",
                "x-example" : 1
              },
              "X-Page-Size" : {
                "type" : "integer",
                "x-example" : 25
              },
              "X-Total-Count" : {
                "type" : "integer",
                "x-example" : 2
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Companies" ],
        "summary" : "Create a new Company",
        "description" : "Adds a Company",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          },
          "x-examples" : {
            "application/json" : "{\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Company"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      }
    },
    "/companies/{companyid}" : {
      "get" : {
        "tags" : [ "Companies" ],
        "summary" : "Load an individual Company",
        "description" : "Loads a Company",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Company"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Companies" ],
        "summary" : "Update a Company",
        "description" : "Stores a Company",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Company"
          },
          "x-examples" : {
            "application/json" : "{\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "$ref" : "#/definitions/Company"
            },
            "examples" : {
              "application/json" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
            }
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Companies" ],
        "summary" : "Delete a Company",
        "description" : "Deletes a Company",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "HTTP_BASIC" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "companyid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Identifier of the Company",
        "x-example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f"
      } ]
    }
  },
  "securityDefinitions" : {
    "HTTP_BASIC" : {
      "description" : "All GET methods are public, meaning that *you can read all the data*. Write operations require authentication and therefore are forbidden to the general public.",
      "type" : "basic"
    }
  },
  "definitions" : {
    "Error" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "minimum" : 400,
          "maximum" : 599
        },
        "description" : {
          "type" : "string",
          "example" : "Bad query parameter [$size]: Invalid integer value [abc]"
        },
        "reasonPhrase" : {
          "type" : "string",
          "example" : "Bad Request"
        }
      },
      "description" : "This general error structure is used throughout this API.",
      "example" : "{\n  \"code\": 400,\n  \"description\": \"Bad query parameter [$size]: Invalid integer value [abc]\",\n  \"reasonPhrase\": \"Bad Request\"\n}"
    },
    "Contact" : {
      "type" : "object",
      "required" : [ "firstName", "id", "lastName" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "example" : "0e8ffb10-ad98-11e6-bf2e-47644ada7c0f",
          "description" : "Auto-generated primary key field"
        },
        "firstName" : {
          "type" : "string",
          "example" : "Kurt"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Williams"
        },
        "birthday" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Birthday as unix timestamp (in ms)",
          "example" : 173664000000
        },
        "active" : {
          "type" : "boolean",
          "default" : true
        },
        "rank" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1,
          "minimum" : 1
        },
        "company" : {
          "type" : "string",
          "example" : "0e8c9fb0-ad98-11e6-bf2e-47644ada7c0f",
          "description" : "This property is a reference to a Company"
        }
      },
      "description" : "A representation of a Contact.",
      "example" : "{\n  \"id\": \"0e8dd830-ad98-11e6-bf2e-47644ada7c0f\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"birthday\": 152755200000,\n  \"active\": true,\n  \"rank\": 1,\n  \"company\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\"\n}"
    },
    "Company" : {
      "type" : "object",
      "required" : [ "address", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Auto-generated primary key field"
        },
        "name" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "example" : "[\"brewery\", \"beer\", \"ale\"]",
          "items" : {
            "type" : "string",
            "pattern" : "[a-zA-Z]+"
          }
        },
        "address" : {
          "required" : [ "city", "street", "zipcode" ],
          "type" : "object",
          "properties" : {
            "street" : {
              "type" : "string"
            },
            "city" : {
              "type" : "string"
            },
            "zipcode" : {
              "type" : "string",
              "pattern" : "[0-9]*"
            }
          }
        }
      },
      "description" : "A representation of a Company.",
      "example" : "{\n  \"id\": \"0e8cedd0-ad98-11e6-bf2e-47644ada7c0f\",\n  \"name\": \"George Street Brewery\",\n  \"address\":{\n    \"street\": \"2 place de la Defense\",\n    \"zipcode\": \"92053\",\n    \"city\": \"Paris\"\n  },\n  \"tags\":[\n    \"brewery\",\n    \"beer\",\n    \"ale\"\n  ]\n}"
    }
  }
}